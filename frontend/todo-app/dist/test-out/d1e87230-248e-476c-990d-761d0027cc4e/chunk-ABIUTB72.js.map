{"version":3,"sources":["node_modules/@angular/platform-browser/fesm2022/dom_renderer.mjs","node_modules/@angular/platform-browser/fesm2022/browser.mjs"],"sourcesContent":["/**\n * @license Angular v20.1.4\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT, ɵgetDOM as _getDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ɵRuntimeError as _RuntimeError, Injectable, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, ɵTracingService as _TracingService, RendererStyleFlags2 } from '@angular/core';\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    _zone;\n    _plugins;\n    _eventNameToPlugin = new Map();\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @param options Options that configure how the event listener is bound.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler, options) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler, options);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new _RuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: EventManager });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }] });\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n    _doc;\n    // TODO: remove (has some usage in G3)\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    // Using non-null assertion because it's set by EventManager's constructor\n    manager;\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n/**\n * Removes all provided elements from the document.\n * @param elements An array of HTML Elements.\n */\nfunction removeElements(elements) {\n    for (const element of elements) {\n        element.remove();\n    }\n}\n/**\n * Creates a `style` element with the provided inline style content.\n * @param style A string of the inline style content.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLStyleElement instance.\n */\nfunction createStyleElement(style, doc) {\n    const styleElement = doc.createElement('style');\n    styleElement.textContent = style;\n    return styleElement;\n}\n/**\n * Searches a DOM document's head element for style elements with a matching application\n * identifier attribute (`ng-app-id`) to the provide identifier and adds usage records for each.\n * @param doc An HTML DOM document instance.\n * @param appId A string containing an Angular application identifer.\n * @param inline A Map object for tracking inline (defined via `styles` in component decorator) style usage.\n * @param external A Map object for tracking external (defined via `styleUrls` in component decorator) style usage.\n */\nfunction addServerStyles(doc, appId, inline, external) {\n    const elements = doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"],link[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"]`);\n    if (elements) {\n        for (const styleElement of elements) {\n            styleElement.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (styleElement instanceof HTMLLinkElement) {\n                // Only use filename from href\n                // The href is build time generated with a unique value to prevent duplicates.\n                external.set(styleElement.href.slice(styleElement.href.lastIndexOf('/') + 1), {\n                    usage: 0,\n                    elements: [styleElement],\n                });\n            }\n            else if (styleElement.textContent) {\n                inline.set(styleElement.textContent, { usage: 0, elements: [styleElement] });\n            }\n        }\n    }\n}\n/**\n * Creates a `link` element for the provided external style URL.\n * @param url A string of the URL for the stylesheet.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLLinkElement instance.\n */\nfunction createLinkElement(url, doc) {\n    const linkElement = doc.createElement('link');\n    linkElement.setAttribute('rel', 'stylesheet');\n    linkElement.setAttribute('href', url);\n    return linkElement;\n}\nclass SharedStylesHost {\n    doc;\n    appId;\n    nonce;\n    /**\n     * Provides usage information for active inline style content and associated HTML <style> elements.\n     * Embedded styles typically originate from the `styles` metadata of a rendered component.\n     */\n    inline = new Map();\n    /**\n     * Provides usage information for active external style URLs and the associated HTML <link> elements.\n     * External styles typically originate from the `ɵɵExternalStylesFeature` of a rendered component.\n     */\n    external = new Map();\n    /**\n     * Set of host DOM nodes that will have styles attached.\n     */\n    hosts = new Set();\n    constructor(doc, appId, nonce, \n    // Cannot remove it due to backward compatibility\n    // (it seems some TGP targets might be calling this constructor directly).\n    platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        addServerStyles(doc, appId, this.inline, this.external);\n        this.hosts.add(doc.head);\n    }\n    /**\n     * Adds embedded styles to the DOM via HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    addStyles(styles, urls) {\n        for (const value of styles) {\n            this.addUsage(value, this.inline, createStyleElement);\n        }\n        urls?.forEach((value) => this.addUsage(value, this.external, createLinkElement));\n    }\n    /**\n     * Removes embedded styles from the DOM that were added as HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    removeStyles(styles, urls) {\n        for (const value of styles) {\n            this.removeUsage(value, this.inline);\n        }\n        urls?.forEach((value) => this.removeUsage(value, this.external));\n    }\n    addUsage(value, usages, creator) {\n        // Attempt to get any current usage of the value\n        const record = usages.get(value);\n        // If existing, just increment the usage count\n        if (record) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && record.usage === 0) {\n                // A usage count of zero indicates a preexisting server generated style.\n                // This attribute is solely used for debugging purposes of SSR style reuse.\n                record.elements.forEach((element) => element.setAttribute('ng-style-reused', ''));\n            }\n            record.usage++;\n        }\n        else {\n            // Otherwise, create an entry to track the elements and add element for each host\n            usages.set(value, {\n                usage: 1,\n                elements: [...this.hosts].map((host) => this.addElement(host, creator(value, this.doc))),\n            });\n        }\n    }\n    removeUsage(value, usages) {\n        // Attempt to get any current usage of the value\n        const record = usages.get(value);\n        // If there is a record, reduce the usage count and if no longer used,\n        // remove from DOM and delete usage record.\n        if (record) {\n            record.usage--;\n            if (record.usage <= 0) {\n                removeElements(record.elements);\n                usages.delete(value);\n            }\n        }\n    }\n    ngOnDestroy() {\n        for (const [, { elements }] of [...this.inline, ...this.external]) {\n            removeElements(elements);\n        }\n        this.hosts.clear();\n    }\n    /**\n     * Adds a host node to the set of style hosts and adds all existing style usage to\n     * the newly added host node.\n     *\n     * This is currently only used for Shadow DOM encapsulation mode.\n     */\n    addHost(hostNode) {\n        this.hosts.add(hostNode);\n        // Add existing styles to new host\n        for (const [style, { elements }] of this.inline) {\n            elements.push(this.addElement(hostNode, createStyleElement(style, this.doc)));\n        }\n        for (const [url, { elements }] of this.external) {\n            elements.push(this.addElement(hostNode, createLinkElement(url, this.doc)));\n        }\n    }\n    removeHost(hostNode) {\n        this.hosts.delete(hostNode);\n    }\n    addElement(host, element) {\n        // Add a nonce if present\n        if (this.nonce) {\n            element.setAttribute('nonce', this.nonce);\n        }\n        // Add application identifier when on the server to support client-side reuse\n        if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n            element.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n        }\n        // Insert the element into the DOM with the host node as parent\n        return host.appendChild(element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SharedStylesHost });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/Math/MathML',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst SOURCEMAP_URL_REGEXP = /\\/\\*#\\s*sourceMappingURL=(.+?)\\s*\\*\\//;\nconst PROTOCOL_REGEXP = /^https?:/;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A DI token that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map((s) => s.replace(COMPONENT_REGEX, compId));\n}\n/**\n * Prepends a baseHref to the `sourceMappingURL` within the provided CSS content.\n * If the `sourceMappingURL` contains an inline (encoded) map, the function skips processing.\n *\n * @note For inline stylesheets, the `sourceMappingURL` is relative to the page's origin\n * and not the provided baseHref. This function is needed as when accessing the page with a URL\n * containing two or more segments.\n * For example, if the baseHref is set to `/`, and you visit a URL like `http://localhost/foo/bar`,\n * the map would be requested from `http://localhost/foo/bar/comp.css.map` instead of what you'd expect,\n * which is `http://localhost/comp.css.map`. This behavior is corrected by modifying the `sourceMappingURL`\n * to ensure external source maps are loaded relative to the baseHref.\n *\n\n * @param baseHref - The base URL to prepend to the `sourceMappingURL`.\n * @param styles - An array of CSS content strings, each potentially containing a `sourceMappingURL`.\n * @returns The updated array of CSS content strings with modified `sourceMappingURL` values,\n * or the original content if no modification is needed.\n */\nfunction addBaseHrefToCssSourceMap(baseHref, styles) {\n    if (!baseHref) {\n        return styles;\n    }\n    const absoluteBaseHrefUrl = new URL(baseHref, 'http://localhost');\n    return styles.map((cssContent) => {\n        if (!cssContent.includes('sourceMappingURL=')) {\n            return cssContent;\n        }\n        return cssContent.replace(SOURCEMAP_URL_REGEXP, (_, sourceMapUrl) => {\n            if (sourceMapUrl[0] === '/' ||\n                sourceMapUrl.startsWith('data:') ||\n                PROTOCOL_REGEXP.test(sourceMapUrl)) {\n                return `/*# sourceMappingURL=${sourceMapUrl} */`;\n            }\n            const { pathname: resolvedSourceMapUrl } = new URL(sourceMapUrl, absoluteBaseHrefUrl);\n            return `/*# sourceMappingURL=${resolvedSourceMapUrl} */`;\n        });\n    });\n}\nclass DomRendererFactory2 {\n    eventManager;\n    sharedStylesHost;\n    appId;\n    removeStylesOnCompDestroy;\n    doc;\n    platformId;\n    ngZone;\n    nonce;\n    tracingService;\n    rendererByCompId = new Map();\n    defaultRenderer;\n    platformIsServer;\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null, tracingService = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.tracingService = tracingService;\n        this.platformIsServer = typeof ngServerMode !== 'undefined' && ngServerMode;\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer, this.tracingService);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (typeof ngServerMode !== 'undefined' &&\n            ngServerMode &&\n            type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n            const platformIsServer = this.platformIsServer;\n            const tracingService = this.tracingService;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer, tracingService);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n                    break;\n            }\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n        this.rendererByCompId.delete(componentId);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }, { token: _TracingService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomRendererFactory2 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }, { type: i0.ɵTracingService, decorators: [{\n                    type: Inject,\n                    args: [_TracingService]\n                }, {\n                    type: Optional\n                }] }] });\nclass DefaultDomRenderer2 {\n    eventManager;\n    doc;\n    ngZone;\n    platformIsServer;\n    tracingService;\n    data = Object.create(null);\n    /**\n     * By default this renderer throws when encountering synthetic properties\n     * This can be disabled for example by the AsyncAnimationRendererFactory\n     */\n    throwOnSyntheticProps = true;\n    constructor(eventManager, doc, ngZone, platformIsServer, tracingService) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.tracingService = tracingService;\n    }\n    destroy() { }\n    destroyNode = null;\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(_parent, oldChild) {\n        oldChild.remove();\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n        if (!el) {\n            throw new _RuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        if (el == null) {\n            return;\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback, options) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = _getDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new _RuntimeError(5102 /* RuntimeErrorCode.UNSUPPORTED_EVENT_TARGET */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        let wrappedCallback = this.decoratePreventDefault(callback);\n        if (this.tracingService?.wrapEventListener) {\n            wrappedCallback = this.tracingService.wrapEventListener(target, event, wrappedCallback);\n        }\n        return this.eventManager.addEventListener(target, event, wrappedCallback, options);\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = typeof ngServerMode !== 'undefined' && ngServerMode\n                ? this.ngZone.runGuarded(() => eventHandler(event))\n                : eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new _RuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Make sure \\`provideAnimationsAsync()\\`, \\`provideAnimations()\\` or \\`provideNoopAnimations()\\` call was added to a list of providers used to bootstrap an application.\n  - There is a corresponding animation configuration named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.dev/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    sharedStylesHost;\n    hostEl;\n    shadowRoot;\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer, tracingService) {\n        super(eventManager, doc, ngZone, platformIsServer, tracingService);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        let styles = component.styles;\n        if (ngDevMode) {\n            // We only do this in development, as for production users should not add CSS sourcemaps to components.\n            const baseHref = _getDOM().getBaseHref(doc) ?? '';\n            styles = addBaseHrefToCssSourceMap(baseHref, styles);\n        }\n        styles = shimStylesContent(component.id, styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n        // Apply any external component styles to the shadow root for the component's element.\n        // The ShadowDOM renderer uses an alternative execution path for component styles that\n        // does not use the SharedStylesHost that other encapsulation modes leverage. Much like\n        // the manual addition of embedded styles directly above, any external stylesheets\n        // must be manually added here to ensure ShadowDOM components are correctly styled.\n        // TODO: Consider reworking the DOM Renderers to consolidate style handling.\n        const styleUrls = component.getExternalStyles?.();\n        if (styleUrls) {\n            for (const styleUrl of styleUrls) {\n                const linkEl = createLinkElement(styleUrl, doc);\n                if (nonce) {\n                    linkEl.setAttribute('nonce', nonce);\n                }\n                this.shadowRoot.appendChild(linkEl);\n            }\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(_parent, oldChild) {\n        return super.removeChild(null, oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    sharedStylesHost;\n    removeStylesOnCompDestroy;\n    styles;\n    styleUrls;\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId) {\n        super(eventManager, doc, ngZone, platformIsServer, tracingService);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        let styles = component.styles;\n        if (ngDevMode) {\n            // We only do this in development, as for production users should not add CSS sourcemaps to components.\n            const baseHref = _getDOM().getBaseHref(doc) ?? '';\n            styles = addBaseHrefToCssSourceMap(baseHref, styles);\n        }\n        this.styles = compId ? shimStylesContent(compId, styles) : styles;\n        this.styleUrls = component.getExternalStyles?.(compId);\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles, this.styleUrls);\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestroy) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles, this.styleUrls);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    contentAttr;\n    hostAttr;\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nexport { DomRendererFactory2, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, REMOVE_STYLES_ON_COMPONENT_DESTROY, SharedStylesHost };\n\n","/**\n * @license Angular v20.1.4\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter as _DomAdapter, ɵsetRootDomAdapter as _setRootDomAdapter, ɵparseCookieValue as _parseCookieValue, ɵgetDOM as _getDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID as _PLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵglobal as _global, ɵRuntimeError as _RuntimeError, Injectable, Inject, ɵresolveComponentResources as _resolveComponentResources, ɵinternalCreateApplication as _internalCreateApplication, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, InjectionToken, ɵTESTABILITY_GETTER as _TESTABILITY_GETTER, ɵTESTABILITY as _TESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE as _INJECTOR_SCOPE, ErrorHandler, RendererFactory2, inject, ApplicationModule, NgModule, ɵsetDocument as _setDocument } from '@angular/core';\nimport { EventManagerPlugin, EVENT_MANAGER_PLUGINS, DomRendererFactory2, SharedStylesHost, EventManager } from './dom_renderer.mjs';\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass BrowserDomAdapter extends _DomAdapter {\n    supportsDOMEvents = true;\n    static makeCurrent() {\n        _setRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener, options) {\n        el.addEventListener(evt, listener, options);\n        return () => {\n            el.removeEventListener(evt, listener, options);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        node.remove();\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return _parseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.head.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n    // The base URL doesn't really matter, we just need it so relative paths have something\n    // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n    return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        _global['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new _RuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        _global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        _global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback) => {\n            const testabilities = _global['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            const decrement = function () {\n                count--;\n                if (count == 0) {\n                    callback();\n                }\n            };\n            testabilities.forEach((testability) => {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!_global['frameworkStabilizers']) {\n            _global['frameworkStabilizers'] = [];\n        }\n        _global['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (_getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserXhr });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler, options) {\n        element.addEventListener(eventName, handler, options);\n        return () => this.removeEventListener(element, eventName, handler, options);\n    }\n    removeEventListener(target, eventName, callback, options) {\n        return target.removeEventListener(eventName, callback, options);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomEventsPlugin });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS',\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey,\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler, options) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return _getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler, options);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach((modifierName) => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach((modifierName) => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: KeyEventsPlugin });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/components/importing).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```angular-ts\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```ts\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    const config = { rootComponent, ...createProvidersConfig(options) };\n    // Attempt to resolve component resources before bootstrapping in JIT mode,\n    // however don't interrupt the bootstrapping process.\n    if ((typeof ngJitMode === 'undefined' || ngJitMode) && typeof fetch === 'function') {\n        return _resolveComponentResources(fetch)\n            .catch((error) => {\n            console.error(error);\n            return Promise.resolve();\n        })\n            .then(() => _internalCreateApplication(config));\n    }\n    return _internalCreateApplication(config);\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return _internalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    _setDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: _PLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: _TESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n    },\n    {\n        provide: _TESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, _TESTABILITY_GETTER],\n    },\n    {\n        provide: Testability, // Also provide as `Testability` for backwards-compatibility.\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, _TESTABILITY_GETTER],\n    },\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: _INJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT],\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    DomRendererFactory2,\n    SharedStylesHost,\n    EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr },\n    typeof ngDevMode === 'undefined' || ngDevMode\n        ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true }\n        : [],\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const providersAlreadyPresent = inject(BROWSER_MODULE_PROVIDERS_MARKER, {\n                optional: true,\n                skipSelf: true,\n            });\n            if (providersAlreadyPresent) {\n                throw new _RuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                    `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { BrowserDomAdapter, BrowserGetTestability, BrowserModule, DomEventsPlugin, KeyEventsPlugin, bootstrapApplication, createApplication, platformBrowser, provideProtractorTestingSupport };\n\n"],"mappings":"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","names":["plugin"],"x_google_ignoreList":[0,1]}