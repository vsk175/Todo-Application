{"version":3,"sources":["angular:test-bed-init:angular:test-bed-init","node_modules/@angular/platform-browser/fesm2022/testing.mjs","node_modules/@angular/common/fesm2022/testing.mjs"],"sourcesContent":["import { getTestBed } from '@angular/core/testing';\nimport { BrowserTestingModule, platformBrowserTesting } from '@angular/platform-browser/testing';\ngetTestBed().initTestEnvironment(BrowserTestingModule, platformBrowserTesting(), {\n  errorOnUnknownElements: true,\n  errorOnUnknownProperties: true,\n});","/**\n * @license Angular v20.1.4\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵgetDOM as _getDOM, DOCUMENT, PlatformLocation } from '@angular/common';\nimport { MockPlatformLocation } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, APP_ID, ɵinternalProvideZoneChangeDetection as _internalProvideZoneChangeDetection, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, ɵChangeDetectionSchedulerImpl as _ChangeDetectionSchedulerImpl, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { platformBrowser, BrowserModule } from './browser.mjs';\nimport './dom_renderer.mjs';\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    _doc;\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    insertRootElement(rootElId) {\n        this.removeAllRootElementsImpl();\n        const rootElement = _getDOM().getDefaultDocument().createElement('div');\n        rootElement.setAttribute('id', rootElId);\n        this._doc.body.appendChild(rootElement);\n    }\n    removeAllRootElements() {\n        // Check whether the `DOCUMENT` instance retrieved from DI contains\n        // the necessary function to complete the cleanup. In tests that don't\n        // interact with DOM, the `DOCUMENT` might be mocked and some functions\n        // might be missing. For such tests, DOM cleanup is not required and\n        // we skip the logic if there are missing functions.\n        if (typeof this._doc.querySelectorAll === 'function') {\n            this.removeAllRootElementsImpl();\n        }\n    }\n    removeAllRootElementsImpl() {\n        const oldRoots = this._doc.querySelectorAll('[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            _getDOM().remove(oldRoots[i]);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DOMTestComponentRenderer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DOMTestComponentRenderer });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: DOMTestComponentRenderer, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Platform for testing\n *\n * @publicApi\n */\nconst platformBrowserTesting = createPlatformFactory(platformBrowser, 'browserTesting');\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserTestingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserTestingModule, exports: [BrowserModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserTestingModule, providers: [\n            { provide: APP_ID, useValue: 'a' },\n            _internalProvideZoneChangeDetection({}),\n            { provide: _ChangeDetectionScheduler, useExisting: _ChangeDetectionSchedulerImpl },\n            { provide: PlatformLocation, useClass: MockPlatformLocation },\n            { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n        ], imports: [BrowserModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: BrowserTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: [\n                        { provide: APP_ID, useValue: 'a' },\n                        _internalProvideZoneChangeDetection({}),\n                        { provide: _ChangeDetectionScheduler, useExisting: _ChangeDetectionSchedulerImpl },\n                        { provide: PlatformLocation, useClass: MockPlatformLocation },\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ],\n                }]\n        }] });\n\nexport { BrowserTestingModule, platformBrowserTesting };\n\n","/**\n * @license Angular v20.1.4\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵnormalizeQueryParams as _normalizeQueryParams, LocationStrategy } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, inject, DOCUMENT } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlatformNavigation } from './platform_navigation.mjs';\nimport { ɵFakeNavigation as _FakeNavigation } from '@angular/core/testing';\nexport { ɵFakeNavigation } from '@angular/core/testing';\nimport { PlatformLocation, Location, LocationStrategy as LocationStrategy$1 } from './location.mjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nfunction parseUrl(urlStr, baseHref) {\n    const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n    let serverBase;\n    // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n    // an arbitrary base URL which can be removed afterward.\n    if (!verifyProtocol.test(urlStr)) {\n        serverBase = 'http://empty.com/';\n    }\n    let parsedUrl;\n    try {\n        parsedUrl = new URL(urlStr, serverBase);\n    }\n    catch (e) {\n        const result = urlParse.exec(serverBase || '' + urlStr);\n        if (!result) {\n            throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n        }\n        const hostSplit = result[4].split(':');\n        parsedUrl = {\n            protocol: result[1],\n            hostname: hostSplit[0],\n            port: hostSplit[1] || '',\n            pathname: result[5],\n            search: result[6],\n            hash: result[8],\n        };\n    }\n    if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n        parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n    }\n    return {\n        hostname: (!serverBase && parsedUrl.hostname) || '',\n        protocol: (!serverBase && parsedUrl.protocol) || '',\n        port: (!serverBase && parsedUrl.port) || '',\n        pathname: parsedUrl.pathname || '/',\n        search: parsedUrl.search || '',\n        hash: parsedUrl.hash || '',\n    };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\nclass MockPlatformLocation {\n    baseHref = '';\n    hashUpdate = new Subject();\n    popStateSubject = new Subject();\n    urlChangeIndex = 0;\n    urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\n    constructor(config) {\n        if (config) {\n            this.baseHref = config.appBaseHref || '';\n            const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n            this.urlChanges[0] = { ...parsedChanges };\n        }\n    }\n    get hostname() {\n        return this.urlChanges[this.urlChangeIndex].hostname;\n    }\n    get protocol() {\n        return this.urlChanges[this.urlChangeIndex].protocol;\n    }\n    get port() {\n        return this.urlChanges[this.urlChangeIndex].port;\n    }\n    get pathname() {\n        return this.urlChanges[this.urlChangeIndex].pathname;\n    }\n    get search() {\n        return this.urlChanges[this.urlChangeIndex].search;\n    }\n    get hash() {\n        return this.urlChanges[this.urlChangeIndex].hash;\n    }\n    get state() {\n        return this.urlChanges[this.urlChangeIndex].state;\n    }\n    getBaseHrefFromDOM() {\n        return this.baseHref;\n    }\n    onPopState(fn) {\n        const subscription = this.popStateSubject.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    onHashChange(fn) {\n        const subscription = this.hashUpdate.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    get href() {\n        let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n        url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n        return url;\n    }\n    get url() {\n        return `${this.pathname}${this.search}${this.hash}`;\n    }\n    parseChanges(state, url, baseHref = '') {\n        // When the `history.state` value is stored, it is always copied.\n        state = JSON.parse(JSON.stringify(state));\n        return { ...parseUrl(url, baseHref), state };\n    }\n    replaceState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        this.urlChanges[this.urlChangeIndex] = {\n            ...this.urlChanges[this.urlChangeIndex],\n            pathname,\n            search,\n            hash,\n            state: parsedState,\n        };\n    }\n    pushState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        if (this.urlChangeIndex > 0) {\n            this.urlChanges.splice(this.urlChangeIndex + 1);\n        }\n        this.urlChanges.push({\n            ...this.urlChanges[this.urlChangeIndex],\n            pathname,\n            search,\n            hash,\n            state: parsedState,\n        });\n        this.urlChangeIndex = this.urlChanges.length - 1;\n    }\n    forward() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex < this.urlChanges.length) {\n            this.urlChangeIndex++;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    back() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex > 0) {\n            this.urlChangeIndex--;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    historyGo(relativePosition = 0) {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        const nextPageIndex = this.urlChangeIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n            this.urlChangeIndex = nextPageIndex;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    getState() {\n        return this.state;\n    }\n    /**\n     * Browsers are inconsistent in when they fire events and perform the state updates\n     * The most easiest thing to do in our mock is synchronous and that happens to match\n     * Firefox and Chrome, at least somewhat closely\n     *\n     * https://github.com/WICG/navigation-api#watching-for-navigations\n     * https://docs.google.com/document/d/1Pdve-DJ1JCGilj9Yqf5HxRJyBKSel5owgOvUJqTauwU/edit#heading=h.3ye4v71wsz94\n     * popstate is always sent before hashchange:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event#when_popstate_is_sent\n     */\n    emitEvents(oldHash, oldUrl) {\n        this.popStateSubject.next({\n            type: 'popstate',\n            state: this.getState(),\n            oldUrl,\n            newUrl: this.url,\n        });\n        if (oldHash !== this.hash) {\n            this.hashUpdate.next({\n                type: 'hashchange',\n                state: null,\n                oldUrl,\n                newUrl: this.url,\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockPlatformLocation, deps: [{ token: MOCK_PLATFORM_LOCATION_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockPlatformLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MOCK_PLATFORM_LOCATION_CONFIG]\n                }, {\n                    type: Optional\n                }] }] });\n/**\n * Mock implementation of URL state.\n */\nclass FakeNavigationPlatformLocation {\n    _platformNavigation;\n    constructor() {\n        const platformNavigation = inject(PlatformNavigation);\n        if (!(platformNavigation instanceof _FakeNavigation)) {\n            throw new Error('FakePlatformNavigation cannot be used without FakeNavigation. Use ' +\n                '`provideFakeNavigation` to have all these services provided together.');\n        }\n        this._platformNavigation = platformNavigation;\n    }\n    config = inject(MOCK_PLATFORM_LOCATION_CONFIG, { optional: true });\n    getBaseHrefFromDOM() {\n        return this.config?.appBaseHref ?? '';\n    }\n    onPopState(fn) {\n        this._platformNavigation.window.addEventListener('popstate', fn);\n        return () => this._platformNavigation.window.removeEventListener('popstate', fn);\n    }\n    onHashChange(fn) {\n        this._platformNavigation.window.addEventListener('hashchange', fn);\n        return () => this._platformNavigation.window.removeEventListener('hashchange', fn);\n    }\n    get href() {\n        return this._platformNavigation.currentEntry.url;\n    }\n    get protocol() {\n        return new URL(this._platformNavigation.currentEntry.url).protocol;\n    }\n    get hostname() {\n        return new URL(this._platformNavigation.currentEntry.url).hostname;\n    }\n    get port() {\n        return new URL(this._platformNavigation.currentEntry.url).port;\n    }\n    get pathname() {\n        return new URL(this._platformNavigation.currentEntry.url).pathname;\n    }\n    get search() {\n        return new URL(this._platformNavigation.currentEntry.url).search;\n    }\n    get hash() {\n        return new URL(this._platformNavigation.currentEntry.url).hash;\n    }\n    pushState(state, title, url) {\n        this._platformNavigation.pushState(state, title, url);\n    }\n    replaceState(state, title, url) {\n        this._platformNavigation.replaceState(state, title, url);\n    }\n    forward() {\n        this._platformNavigation.forward();\n    }\n    back() {\n        this._platformNavigation.back();\n    }\n    historyGo(relativePosition = 0) {\n        this._platformNavigation.go(relativePosition);\n    }\n    getState() {\n        return this._platformNavigation.currentEntry.getHistoryState();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: FakeNavigationPlatformLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: FakeNavigationPlatformLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: FakeNavigationPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n\nconst FAKE_NAVIGATION = new InjectionToken('fakeNavigation', {\n    providedIn: 'root',\n    factory: () => {\n        const config = inject(MOCK_PLATFORM_LOCATION_CONFIG, { optional: true });\n        const baseFallback = 'http://_empty_/';\n        const startUrl = new URL(config?.startUrl || baseFallback, baseFallback);\n        const fakeNavigation = new _FakeNavigation(inject(DOCUMENT), startUrl.href);\n        fakeNavigation.setSynchronousTraversalsForTesting(true);\n        return fakeNavigation;\n    },\n});\n/**\n * Return a provider for the `FakeNavigation` in place of the real Navigation API.\n */\nfunction provideFakePlatformNavigation() {\n    return [\n        {\n            provide: PlatformNavigation,\n            useFactory: () => inject(FAKE_NAVIGATION),\n        },\n        { provide: PlatformLocation, useClass: FakeNavigationPlatformLocation },\n    ];\n}\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nclass SpyLocation {\n    urlChanges = [];\n    _history = [new LocationState('', '', null)];\n    _historyIndex = 0;\n    /** @internal */\n    _subject = new Subject();\n    /** @internal */\n    _basePath = '';\n    /** @internal */\n    _locationStrategy = null;\n    /** @internal */\n    _urlChangeListeners = [];\n    /** @internal */\n    _urlChangeSubscription = null;\n    /** @docs-private */\n    ngOnDestroy() {\n        this._urlChangeSubscription?.unsubscribe();\n        this._urlChangeListeners = [];\n    }\n    setInitialPath(url) {\n        this._history[this._historyIndex].path = url;\n    }\n    setBaseHref(url) {\n        this._basePath = url;\n    }\n    path() {\n        return this._history[this._historyIndex].path;\n    }\n    getState() {\n        return this._history[this._historyIndex].state;\n    }\n    isCurrentPathEqualTo(path, query = '') {\n        const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n        const currPath = this.path().endsWith('/')\n            ? this.path().substring(0, this.path().length - 1)\n            : this.path();\n        return currPath == givenPath + (query.length > 0 ? '?' + query : '');\n    }\n    simulateUrlPop(pathname) {\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n    }\n    simulateHashChange(pathname) {\n        const path = this.prepareExternalUrl(pathname);\n        this.pushHistory(path, '', null);\n        this.urlChanges.push('hash: ' + pathname);\n        // the browser will automatically fire popstate event before each `hashchange` event, so we need\n        // to simulate it.\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n    }\n    prepareExternalUrl(url) {\n        if (url.length > 0 && !url.startsWith('/')) {\n            url = '/' + url;\n        }\n        return this._basePath + url;\n    }\n    go(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        this.pushHistory(path, query, state);\n        const locationState = this._history[this._historyIndex - 1];\n        if (locationState.path == path && locationState.query == query) {\n            return;\n        }\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.urlChanges.push(url);\n        this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n    }\n    replaceState(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        const history = this._history[this._historyIndex];\n        history.state = state;\n        if (history.path == path && history.query == query) {\n            return;\n        }\n        history.path = path;\n        history.query = query;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.urlChanges.push('replace: ' + url);\n        this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n    }\n    forward() {\n        if (this._historyIndex < this._history.length - 1) {\n            this._historyIndex++;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    back() {\n        if (this._historyIndex > 0) {\n            this._historyIndex--;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    historyGo(relativePosition = 0) {\n        const nextPageIndex = this._historyIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n            this._historyIndex = nextPageIndex;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    onUrlChange(fn) {\n        this._urlChangeListeners.push(fn);\n        this._urlChangeSubscription ??= this.subscribe((v) => {\n            this._notifyUrlChangeListeners(v.url, v.state);\n        });\n        return () => {\n            const fnIndex = this._urlChangeListeners.indexOf(fn);\n            this._urlChangeListeners.splice(fnIndex, 1);\n            if (this._urlChangeListeners.length === 0) {\n                this._urlChangeSubscription?.unsubscribe();\n                this._urlChangeSubscription = null;\n            }\n        };\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n        this._urlChangeListeners.forEach((fn) => fn(url, state));\n    }\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({\n            next: onNext,\n            error: onThrow ?? undefined,\n            complete: onReturn ?? undefined,\n        });\n    }\n    normalize(url) {\n        return null;\n    }\n    pushHistory(path, query, state) {\n        if (this._historyIndex > 0) {\n            this._history.splice(this._historyIndex + 1);\n        }\n        this._history.push(new LocationState(path, query, state));\n        this._historyIndex = this._history.length - 1;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SpyLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SpyLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: SpyLocation, decorators: [{\n            type: Injectable\n        }] });\nclass LocationState {\n    path;\n    query;\n    state;\n    constructor(path, query, state) {\n        this.path = path;\n        this.query = query;\n        this.state = state;\n    }\n}\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nclass MockLocationStrategy extends LocationStrategy {\n    internalBaseHref = '/';\n    internalPath = '/';\n    internalTitle = '';\n    urlChanges = [];\n    /** @internal */\n    _subject = new Subject();\n    stateChanges = [];\n    constructor() {\n        super();\n    }\n    simulatePopState(url) {\n        this.internalPath = url;\n        this._subject.next(new _MockPopStateEvent(this.path()));\n    }\n    path(includeHash = false) {\n        return this.internalPath;\n    }\n    prepareExternalUrl(internal) {\n        if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n            return this.internalBaseHref + internal.substring(1);\n        }\n        return this.internalBaseHref + internal;\n    }\n    pushState(ctx, title, path, query) {\n        // Add state change to changes array\n        this.stateChanges.push(ctx);\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push(externalUrl);\n    }\n    replaceState(ctx, title, path, query) {\n        // Reset the last index of stateChanges to the ctx (state) object\n        this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push('replace: ' + externalUrl);\n    }\n    onPopState(fn) {\n        this._subject.subscribe({ next: fn });\n    }\n    getBaseHref() {\n        return this.internalBaseHref;\n    }\n    back() {\n        if (this.urlChanges.length > 0) {\n            this.urlChanges.pop();\n            this.stateChanges.pop();\n            const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n            this.simulatePopState(nextUrl);\n        }\n    }\n    forward() {\n        throw 'not implemented';\n    }\n    getState() {\n        return this.stateChanges[(this.stateChanges.length || 1) - 1];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockLocationStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockLocationStrategy });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.4\", ngImport: i0, type: MockLocationStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\nclass _MockPopStateEvent {\n    newUrl;\n    pop = true;\n    type = 'popstate';\n    constructor(newUrl) {\n        this.newUrl = newUrl;\n    }\n}\n\n/**\n * Returns mock providers for the `Location` and `LocationStrategy` classes.\n * The mocks are helpful in tests to fire simulated location events.\n *\n * @publicApi\n */\nfunction provideLocationMocks() {\n    return [\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy$1, useClass: MockLocationStrategy },\n    ];\n}\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation, provideLocationMocks, provideFakePlatformNavigation as ɵprovideFakePlatformNavigation };\n\n"],"mappings":"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","names":[],"x_google_ignoreList":[1,2]}